{"author":"Benjamin Reynes benjmain@morio.co","kind":"dev","methods":{"addProposal(string)":{"details":"Emit an event on success.","params":{"_desc":"the description of the proposal."}},"addVoter(address)":{"details":"Emit an event on success.","params":{"_addr":"the address of the voter."}},"getOneProposal(uint256)":{"details":"Only Registered Voters can access this fuction.","params":{"_id":"the id of the desired proposal."}},"getVoter(address)":{"details":"Only Registered Voters can access this fuction.","params":{"_addr":"the address of the desired voter."}},"nextStatus()":{"details":"Emit an event on success, revert if status equal to five"},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"resetVotingSystem()":{"details":"Emit an event on success, reset workflowStatus, proposalsArray, winningProposalID, voters"},"setVote(uint256)":{"details":"Emit an event on success.","params":{"_id":"the id of the proposal to vote for."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdraw(uint256)":{"details":"withdraw function. OnlyOwner.","params":{"amount":"the amount to withdraw."}}},"title":"Alyra Voting Contract","version":1}